必要条件
--------

必要なのは、 Docker （
https://docs.docker.com/install/#supported-platforms）または podman （
https://podman.io/getting-started/installation）および bashスクリプトを
実行するいくつかの手段です。 これは、Linuxビルドプロセスであるにもかかわらず、
これをMacOSボックスで実行できることを意味します。 （bashを取得する必要がある
ため）多少の困難はありますが、Windowsも使用できるはずです。

少なくとも2GiBの空きRAMが本当に必要です。
そうでなければ、 Prince は狂ったようにスワップします。

ビルドは、利用可能なものに応じて、
podman（優先）または Docker コンテナで実行されます。

使い方
------

すべてのバージョンを作成するには以下のコマンドを打ちます：

  ./run_container.sh

これには、使用可能なCPUに比例して時間がかかることに注意してください。
AWS t2.micro では、RAMが不足しているため、2時間以上後に諦めました。 
AWS t2.medium では、約1時間かかりました。 RAM は重要な考慮事項です。
少なくとも 2GiB の空きが必要です（場合によってはそれ以上）

最終結果は、さまざまな場所に散在する build/ ディレクトリの下に配置されます。
最終出力のみを別のディレクトリにコピーする場合、
つまり Web 表示用にしたい場合、-a オプションを使用できます。
たとえば、

  ./run_container.sh -a output/

とコマンドを打った場合、すべての出力を output/ ディレクトリに配置しますが、

  ./run_container.sh -a ~/public_html/cll_build/

とコマンドを打った場合、あなたの個人的なウェブスペースにそれらを置きます。

完全なビルドの実行にはかなりの時間がかかります（おそらく少なくとも1時間）。
迅速なテストのためにたった1つの章でそれを行うには以下のコマンドを打ちます：

  ./run_container.sh -t chapters/05.xml 

以下のコマンドは本全体を行いますが、はるかに高速です：

  ./run_container.sh -t

以下のような、-Tで指定された多くのサブターゲットもあります：

  ./run_container.sh -t -T pdf

次の方法でターゲットの完全なリストを取得できます：

  ./run_container.sh -h
